
#spring.datasource.url=${JDBC_URL}?currentSchema=interview_service
#spring.datasource.username=${JDBC_USERNAME}
#spring.datasource.password=${JDBC_PASSWORD}

spring.application.name=interview-service

server.port=50222
#server.port 9001 used for development purposes
#change port to 0 when service can be linked to Zuul
spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres

# Enabling H2 Console
spring.h2.console.enabled=true
# to view this go to localhost:port/h2-console
spring.datasource.name=Interview_ServiceDB
spring.datasource.initialize=false
spring.datasource.username=sa
spring.datasource.password=sa
# add IFEXISTS=TRUE;  if we want to stop creation of local DB
spring.datasource.url=jdbc:h2:./Interview_ServiceDB;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto = update

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=validate
 
 

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.main.allow-bean-definition-overriding=true

#Make both of these true when linking with eureka server
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
